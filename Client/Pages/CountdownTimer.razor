@page "/countdowntimer"
@using System.Timers

<PageTitle>Lunch Countdown | LOLA</PageTitle>

@code {
    private int days, hours, minutes, seconds, sr_duplicate;
    DateTime current_time = DateTime.Now;
    //This calculates the seconds until 12:00 the next wednesday
    int seconds_remaining = Math.Abs(43200 - ((3600 * DateTime.Now.Hour) + (60 * DateTime.Now.Minute) + DateTime.Now.Second) + ((((int) DayOfWeek.Wednesday - (int) DateTime.Today.DayOfWeek + 7) % 7) * 86400));
    private static Timer aTimer;
    bool rating_period = false;
   
    protected override void OnInitialized()
    {
        aTimer = new Timer(1000);
        aTimer.Elapsed += CountDownTimer;
        aTimer.Enabled = true;
    }

    public void CountDownTimer(Object source, System.Timers.ElapsedEventArgs e)
    {
        if(DateTime.Now.DayOfWeek == DayOfWeek.Wednesday && DateTime.Now.TimeOfDay > new TimeSpan(12,0,0))
        {
            aTimer.Enabled = false;
            rating_period = true;
        }
        else 
        {
            seconds_remaining -= 1;
            sr_duplicate = seconds_remaining;
            days = sr_duplicate / (24 * 3600);
     
            sr_duplicate = sr_duplicate % (24 * 3600);
            hours = sr_duplicate / 3600;
     
            sr_duplicate %= 3600;
            minutes = sr_duplicate / 60 ;
     
            sr_duplicate %= 60;
            seconds = sr_duplicate;   
        }
        InvokeAsync(StateHasChanged);
    }
}

@if(rating_period)//Change to check bool(?) if meal has not been rated(?)
{
    <h1>Time is up!</h1>
    <h3>Make sure to rate your meal for today!</h3>
    //Include Name of resturaunt and person who chose resturaunt
    <button onclick="location.href='/ratelunch'" type="button">
        Rate your meal here</button>
}
else if(seconds_remaining > 0){
    //Align this for single vs double digits
    <h1>Time to Next Lunch Order</h1>
    <br>
    <h2>@days Days</h2>
    <h2>@hours Hours</h2>
    <h2>@minutes Minutes</h2>
    <h2>@seconds Seconds</h2>
}